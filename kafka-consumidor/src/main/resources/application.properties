spring.application.name=kafka-consumidor

# Configurações do Consumidor Kafka
# Endereço do broker Kafka. Assim como no produtor, define a lista de brokers.
spring.kafka.consumer.bootstrap-servers=localhost:9092
# ID do grupo de consumidores. Crucial para consumidores. Mensagens em um tópico
#são entregues a um consumidor em cada grupo de consumidores. Se você tiver
#múltiplos consumidores com o mesmo group-id , eles trabalharão em conjunto para
#consumir as mensagens de um tópico, distribuindo a carga. Se tiver group-id s
#diferentes, cada grupo receberá uma cópia de todas as mensagens.
spring.kafka.consumer.group-id=my-group
# Especificam as classes que serão usadas para deserializar a chave e o valor da mensagem,
#respectivamente. Devem corresponder aos serializadores usados pelo produtor.
# Deserializador para a chave
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
# Deserializador para o valor
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
# Onde começar a ler se não houver offset salvo. Define o comportamento quando um
#consumidor inicia e não há um offset salvo para seu grupo em um tópico/partição.
#earliest significa que ele começará a ler do início do tópico. latest (padrão) significa
#que ele começará a ler apenas as novas mensagens.
spring.kafka.consumer.auto-offset-reset=earliest

# Nome do tópico Kafka que será usado
app.kafka.topic.name=meu-topico

server.port=8082